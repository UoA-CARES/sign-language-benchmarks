rgb
flow
depth
skeleton
face
left_hand
right_hand
[tensor([[  3.5485,  11.4364,   9.1596,  ...,  -0.9205,  -2.6992,  -0.3769],
        [  8.2725,   6.3841,   7.7772,  ...,  -3.6459,  -5.4754,  -3.2562],
        [ 33.1091,   3.9173,   2.9565,  ...,  -3.6395,  -5.2753,  -2.7577],
        ...,
        [  7.4051,  15.1263,  35.4123,  ...,  -7.3012,  -3.7848,  -3.9137],
        [  8.3533,   3.5979,  12.9101,  ...,  -1.3969,  -0.7528,  -2.2886],
        [ 20.5377,   1.0393,   2.0655,  ..., -10.6619,  -3.0498,   1.5752]],
       device='cuda:0'), tensor([[11.7744, 19.8742,  3.2481,  ..., -1.5735, -2.6319, -1.8231],
        [17.2185,  2.0873, 20.5581,  ..., -1.3524,  0.3277, -3.0446],
        [25.3751,  0.8417,  8.9186,  ...,  2.4135, -5.0017, -3.2968],
        ...,
        [-0.5525, 17.0797, 21.9285,  ..., -3.7134, -6.4620, -5.3517],
        [ 4.5548,  2.1826,  7.2201,  ..., -0.4373, -1.7710, -0.7036],
        [15.9942,  1.2691, 17.8492,  ...,  1.3632, -2.3405, -0.8715]],
       device='cuda:0'), tensor([[ 6.0387e+00,  1.2077e+01,  7.6767e+00,  ..., -3.0905e+00,
         -3.1459e+00, -1.5660e+00],
        [ 1.3762e+01, -1.2911e+00,  1.5729e+01,  ..., -4.3117e+00,
         -2.2762e+00, -2.7046e+00],
        [ 1.4116e+01,  2.1527e-01,  1.1731e+01,  ..., -3.6434e+00,
         -2.7006e+00, -9.4825e-01],
        ...,
        [ 3.7959e+00,  1.1892e+01,  2.2494e+01,  ..., -2.9355e+00,
         -3.7387e+00, -4.6604e+00],
        [ 8.0979e+00, -5.1054e+00,  3.5561e+01,  ..., -8.2422e-01,
          1.3785e-02, -2.5052e+00],
        [ 8.4538e+00,  4.7882e+00,  1.6969e+01,  ..., -1.3514e+01,
         -9.1417e-01, -1.5385e-01]], device='cuda:0'), tensor([[  6.9120,  16.2985,   2.2692,  ...,  -5.7969,  -5.4285,  -7.3221],
        [  7.2175,  11.1479,   8.9184,  ...,  -0.9827,  -5.1052,  -3.5833],
        [ 18.4140,   0.0473,   2.1026,  ...,  -6.3318,  -2.1061,  -1.9893],
        ...,
        [ 14.5403,  18.0886,  35.6371,  ...,  -6.0419,  -3.4183, -11.1650],
        [  3.2346,   3.7519,  16.0831,  ...,  -1.3413,  -1.7693,  -1.8764],
        [  3.2148,  11.3158,  10.2265,  ..., -12.3053,  -6.6080,  -3.3806]],
       device='cuda:0'), tensor([[-16.5117,  16.8517,  34.9359,  ..., -12.9805,  -0.6127, -12.7873],
        [  5.6095,  13.6604,  17.2567,  ...,  -6.7970,  -3.1732,  -3.8394],
        [  3.8359,   4.8242,  10.0073,  ...,  -8.1087,  -4.4148,  -5.9980],
        ...,
        [ 34.9293,  44.8472,  29.8672,  ..., -15.3759,  -5.1716, -14.4231],
        [  1.8524,  10.3396,  18.4231,  ...,  -3.3685,  -2.4119,  -2.7129],
        [ 11.6017,   4.2315,  36.5979,  ...,  -4.3705,  -3.2905, -10.4176]],
       device='cuda:0'), tensor([[ 7.8716e+00,  5.9330e+00,  1.6904e+01,  ..., -6.4064e-01,
         -3.6453e+00, -4.6250e+00],
        [ 1.1756e+01,  7.8511e+00,  5.8164e-03,  ..., -2.4846e+00,
         -8.2395e+00, -2.6690e+00],
        [ 5.6957e+01,  2.0436e+01,  2.1320e+01,  ..., -7.4683e+00,
         -2.5948e+01, -1.5471e+01],
        ...,
        [ 1.0532e+01,  1.7442e+01,  2.2489e+01,  ...,  2.7220e+00,
         -7.3829e+00, -2.3847e+00],
        [ 1.1034e+01,  4.7630e-01,  1.2423e+01,  ..., -1.6479e+00,
         -1.4553e+00, -1.6585e+00],
        [ 1.0580e+01,  3.1419e+00,  5.6947e+00,  ..., -5.8859e+00,
         -1.4176e+00, -3.7700e+00]], device='cuda:0'), tensor([[  7.4215,  10.3796,  12.6371,  ...,  -5.3079,  -4.4591,  -6.9490],
        [ 16.7660,   8.6051,  10.6523,  ...,   0.8275,   2.6183,  -2.4798],
        [ 60.6385,  31.7910, -16.4582,  ...,  -4.6408,  -2.3096,  -4.1744],
        ...,
        [  2.6378,  10.0580,  17.2356,  ...,  -0.4186,  -1.9362,  -2.1641],
        [  9.5818,   3.5392,  20.4660,  ...,  -1.6857,   0.5714,  -4.9545],
        [ 18.9804,  18.0428,  16.3526,  ...,  -2.1871,  -0.7705,  -2.9010]],
       device='cuda:0')]
Traceback (most recent call last):
  File "train_one_neuron_head.py", line 247, in <module>
    avg_loss, learning_rate = train_one_epoch(epoch+1)
  File "train_one_neuron_head.py", line 65, in train_one_epoch
    outputs = model(rgb=rgb,
  File "/home/sadat/miniconda3/envs/mmsign/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sadat/Desktop/sign-language-summer-research/experiments/seven_sees/model/sees7.py", line 42, in forward
    cls_score = self.head(stream)
  File "/home/sadat/miniconda3/envs/mmsign/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sadat/Desktop/sign-language-summer-research/experiments/seven_sees/model/one_neuron_head.py", line 47, in forward
    return self.fc_cls(x.permute(1,0)).permute(1,0)
  File "/home/sadat/miniconda3/envs/mmsign/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/sadat/miniconda3/envs/mmsign/lib/python3.8/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (400x49 and 7x1)